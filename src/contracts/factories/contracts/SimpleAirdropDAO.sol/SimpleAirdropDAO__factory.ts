/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SimpleAirdropDAO,
  SimpleAirdropDAOInterface,
} from "../../../contracts/SimpleAirdropDAO.sol/SimpleAirdropDAO";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "vesting_period",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenPerSec",
        type: "uint256",
      },
    ],
    name: "VestingUpdate",
    type: "event",
  },
  {
    inputs: [],
    name: "amountPerUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeAirdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "echo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_users",
        type: "address[]",
      },
    ],
    name: "pushUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "secondOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setAmountPerUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwner2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ve",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319908116331790915560028054821673fbbf371c9b0b994eebfcc977cef603f7f31c070d17905560038054821673f4c8e32eadec4bfe97e0f595add0f4450a863a1117905560018054909116731c6c2498854662fdeadbc4f14ea2f30ca305104b17905568056bc75e2d63100000600555610bd28061009d6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806368a9f31c1161007157806368a9f31c1461013f5780637ae662a314610152578063866131d2146101695780638da5cb5b1461017c578063f4f3b2001461018f578063f88a1681146101a257600080fd5b806313af4035146100b95780631f850716146100ce578063269af61d146100fe57806329f4acb014610106578063365b98b2146101195780635825884f1461012c575b600080fd5b6100cc6100c736600461096c565b6101b5565b005b6002546100e1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100cc610232565b6003546100e1906001600160a01b031681565b6100e161012736600461098e565b610436565b6100cc61013a36600461096c565b610460565b6001546100e1906001600160a01b031681565b61015b60055481565b6040519081526020016100f5565b6100cc61017736600461098e565b6104d4565b6000546100e1906001600160a01b031681565b6100cc61019d36600461096c565b610518565b6100cc6101b03660046109bd565b6105eb565b6000546001600160a01b03163314806101d857506001546001600160a01b031633145b6101fd5760405162461bcd60e51b81526004016101f490610a82565b60405180910390fd5b6001600160a01b03811661021057600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633148061025557506001546001600160a01b031633145b6102715760405162461bcd60e51b81526004016101f490610a82565b6000805b600454821015610432576004828154811061029257610292610aa5565b600091825260208220015460035460025460405163095ea7b360e01b81526001600160a01b03918216600482015260248101949094529182169350169063095ea7b3906044016020604051808303816000875af11580156102f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031b9190610abb565b5060035460025460055460405163095ea7b360e01b81526001600160a01b039283166004820152602481019190915291169063095ea7b3906044016020604051808303816000875af1158015610375573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103999190610abb565b5060025460055460405163d4e54c3b60e01b815260048101919091526303c2670060248201526001600160a01b0383811660448301529091169063d4e54c3b906064016020604051808303816000875af11580156103fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041f9190610add565b508161042a81610af6565b925050610275565b5050565b6004818154811061044657600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633148061048357506001546001600160a01b031633145b61049f5760405162461bcd60e51b81526004016101f490610a82565b6001600160a01b0381166104b257600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314806104f757506001546001600160a01b031633145b6105135760405162461bcd60e51b81526004016101f490610a82565b600555565b6000546001600160a01b031633148061053b57506001546001600160a01b031633145b6105575760405162461bcd60e51b81526004016101f490610a82565b6001600160a01b03811661056a57600080fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156105b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d59190610add565b90506104326001600160a01b0383163383610697565b6000546001600160a01b031633148061060e57506001546001600160a01b031633145b61062a5760405162461bcd60e51b81526004016101f490610a82565b60005b815181101561043257600482828151811061064a5761064a610aa5565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790558061068f81610af6565b91505061062d565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526106e99084906106ee565b505050565b6000610743826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107c09092919063ffffffff16565b8051909150156106e957808060200190518101906107619190610abb565b6106e95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101f4565b60606107cf84846000856107d7565b949350505050565b6060824710156108385760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101f4565b600080866001600160a01b031685876040516108549190610b4d565b60006040518083038185875af1925050503d8060008114610891576040519150601f19603f3d011682016040523d82523d6000602084013e610896565b606091505b50915091506108a7878383876108b2565b979650505050505050565b6060831561092157825160000361091a576001600160a01b0385163b61091a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101f4565b50816107cf565b6107cf83838151156109365781518083602001fd5b8060405162461bcd60e51b81526004016101f49190610b69565b80356001600160a01b038116811461096757600080fd5b919050565b60006020828403121561097e57600080fd5b61098782610950565b9392505050565b6000602082840312156109a057600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156109d057600080fd5b823567ffffffffffffffff808211156109e857600080fd5b818501915085601f8301126109fc57600080fd5b813581811115610a0e57610a0e6109a7565b8060051b604051601f19603f83011681018181108582111715610a3357610a336109a7565b604052918252848201925083810185019188831115610a5157600080fd5b938501935b82851015610a7657610a6785610950565b84529385019392850192610a56565b98975050505050505050565b6020808252600990820152683737ba1037bbb732b960b91b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610acd57600080fd5b8151801515811461098757600080fd5b600060208284031215610aef57600080fd5b5051919050565b600060018201610b1657634e487b7160e01b600052601160045260246000fd5b5060010190565b60005b83811015610b38578181015183820152602001610b20565b83811115610b47576000848401525b50505050565b60008251610b5f818460208701610b1d565b9190910192915050565b6020815260008251806020840152610b88816040850160208701610b1d565b601f01601f1916919091016040019291505056fea2646970667358221220abace4b1f0c5c0552dd7312320297b2d2acf29747ead61e4febb84b2a77de26a64736f6c634300080d0033";

type SimpleAirdropDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleAirdropDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleAirdropDAO__factory extends ContractFactory {
  constructor(...args: SimpleAirdropDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimpleAirdropDAO & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleAirdropDAO__factory {
    return super.connect(runner) as SimpleAirdropDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleAirdropDAOInterface {
    return new Interface(_abi) as SimpleAirdropDAOInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleAirdropDAO {
    return new Contract(address, _abi, runner) as unknown as SimpleAirdropDAO;
  }
}
