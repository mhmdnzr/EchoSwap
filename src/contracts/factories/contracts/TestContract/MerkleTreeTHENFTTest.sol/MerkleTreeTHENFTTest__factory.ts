/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MerkleTreeTHENFTTest,
  MerkleTreeTHENFTTestInterface,
} from "../../../../contracts/TestContract/MerkleTreeTHENFTTest.sol/MerkleTreeTHENFTTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_airdropClaim",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_who",
        type: "address",
      },
    ],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_who",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "NotInMerkle",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimSet",
    type: "event",
  },
  {
    inputs: [],
    name: "_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "airdropClaim",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "info",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "info2",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "init",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_airdropclaim",
        type: "address",
      },
    ],
    name: "setairdropClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052601960808190527f4d65726b6c6554726565207468654e46542041697264726f700000000000000060a090815261003e91600491906100dd565b506040805180820190915260138082527f746869732069732061207465737420756e6974000000000000000000000000006020909201918252610083916005916100dd565b5034801561009057600080fd5b50604051610acb380380610acb8339810160408190526100af91610176565b600180546001600160a01b039092166001600160a01b031992831617905560028054909116331790556101e0565b8280546100e9906101a6565b90600052602060002090601f01602090048101928261010b5760008555610151565b82601f1061012457805160ff1916838001178555610151565b82800160010185558215610151579182015b82811115610151578251825591602001919060010190610136565b5061015d929150610161565b5090565b5b8082111561015d5760008155600101610162565b60006020828403121561018857600080fd5b81516001600160a01b038116811461019f57600080fd5b9392505050565b600181811c908216806101ba57607f821691505b6020821081036101da57634e487b7160e01b600052602260045260246000fd5b50919050565b6108dc806101ef6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80637cb64759116100715780637cb647591461014d5780638da5cb5b14610160578063b349b9731461018b578063b6d6ed4e14610193578063e1c7392a146101a6578063fe62bee7146101ba57600080fd5b806313af4035146100b95780632eb4a7ab146100ce578063370158ea146100ea5780633d13f874146100ff5780636b7f18bb1461011257806373b2e80e1461011a575b600080fd5b6100cc6100c73660046106d7565b6101cd565b005b6100d760005481565b6040519081526020015b60405180910390f35b6100f2610235565b6040516100e191906106f2565b6100cc61010d366004610747565b6102c3565b6100f26104da565b61013d6101283660046106d7565b60036020526000908152604090205460ff1681565b60405190151581526020016100e1565b6100cc61015b3660046107d1565b6104e7565b600254610173906001600160a01b031681565b6040516001600160a01b0390911681526020016100e1565b6100cc61054c565b600154610173906001600160a01b031681565b60025461013d90600160a01b900460ff1681565b6100cc6101c83660046106d7565b6105da565b6002546001600160a01b031633146102005760405162461bcd60e51b81526004016101f7906107ea565b60405180910390fd5b6001600160a01b03811661021357600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600480546102429061080d565b80601f016020809104026020016040519081016040528092919081815260200182805461026e9061080d565b80156102bb5780601f10610290576101008083540402835291602001916102bb565b820191906000526020600020905b81548152906001019060200180831161029e57829003601f168201915b505050505081565b600254600160a01b900460ff1661030a5760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd081cdd185c9d195960aa1b60448201526064016101f7565b3360009081526003602052604090205460ff161561033d57604051632058b6db60e01b81523360048201526024016101f7565b6040516bffffffffffffffffffffffff193360601b1660208201526034810184905260009060540160405160208183030381529060405280519060200120905060006103be84848080602002602001604051908101604052809392919081815260200183836020028082843760009201829052505492508691506106269050565b9050806103e75760405163057365dd60e31b8152336004820152602481018690526044016101f7565b6001546040516304f4b51360e51b8152336004820152602481018790526001600160a01b0388811660448301526000921690639e96a260906064016020604051808303816000875af1158015610441573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104659190610847565b90508061047157600080fd5b3360008181526003602052604090819020805460ff19166001179055516001600160a01b03891691907fdc2005f113f1c2ccd6bd35df2a16954f0ff4e029277b9d76ea10b0b3b29ae964906104c9908a815260200190565b60405180910390a350505050505050565b600580546102429061080d565b6002546001600160a01b031633146105115760405162461bcd60e51b81526004016101f7906107ea565b806105475760405162461bcd60e51b81526020600482015260066024820152650726f6f7420360d41b60448201526064016101f7565b600055565b6002546001600160a01b031633146105765760405162461bcd60e51b81526004016101f7906107ea565b600254600160a01b900460ff161561058d57600080fd5b6000546105c55760405162461bcd60e51b81526020600482015260066024820152650726f6f7420360d41b60448201526064016101f7565b6002805460ff60a01b1916600160a01b179055565b6002546001600160a01b031633146106045760405162461bcd60e51b81526004016101f7906107ea565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600082610633858461063c565b14949350505050565b600081815b84518110156106815761066d8286838151811061066057610660610869565b6020026020010151610689565b9150806106798161087f565b915050610641565b509392505050565b60008183106106a55760008281526020849052604090206106b4565b60008381526020839052604090205b9392505050565b80356001600160a01b03811681146106d257600080fd5b919050565b6000602082840312156106e957600080fd5b6106b4826106bb565b600060208083528351808285015260005b8181101561071f57858101830151858201604001528201610703565b81811115610731576000604083870101525b50601f01601f1916929092016040019392505050565b6000806000806060858703121561075d57600080fd5b610766856106bb565b935060208501359250604085013567ffffffffffffffff8082111561078a57600080fd5b818701915087601f83011261079e57600080fd5b8135818111156107ad57600080fd5b8860208260051b85010111156107c257600080fd5b95989497505060200194505050565b6000602082840312156107e357600080fd5b5035919050565b6020808252600990820152683737ba1037bbb732b960b91b604082015260600190565b600181811c9082168061082157607f821691505b60208210810361084157634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561085957600080fd5b815180151581146106b457600080fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161089f57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220ec6df7b36c44506ec53d4d44e2dde5777bb331080288df0b1dbc9ea5fc2ff13964736f6c634300080d0033";

type MerkleTreeTHENFTTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MerkleTreeTHENFTTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MerkleTreeTHENFTTest__factory extends ContractFactory {
  constructor(...args: MerkleTreeTHENFTTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _airdropClaim: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_airdropClaim, overrides || {});
  }
  override deploy(
    _airdropClaim: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_airdropClaim, overrides || {}) as Promise<
      MerkleTreeTHENFTTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MerkleTreeTHENFTTest__factory {
    return super.connect(runner) as MerkleTreeTHENFTTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleTreeTHENFTTestInterface {
    return new Interface(_abi) as MerkleTreeTHENFTTestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MerkleTreeTHENFTTest {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MerkleTreeTHENFTTest;
  }
}
