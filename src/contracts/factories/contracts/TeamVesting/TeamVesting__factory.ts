/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TeamVesting,
  TeamVestingInterface,
} from "../../../contracts/TeamVesting/TeamVesting";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CLIFF",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LINEAR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimCliff",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimDistribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "depositors",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasCliff",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isTeam",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_users",
        type: "address[]",
      },
    ],
    name: "registerUsers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "depositor",
        type: "address",
      },
    ],
    name: "setDepositor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "teamCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userLastTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526301e133806003556301e13380600455620f424060055534801561002757600080fd5b50600080546001600160a01b031990811633179091556001805490911673f4c8e32eadec4bfe97e0f595add0f4450a863a111790556a022692484ce19d0900000060025542600655610eba8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063b4455ee8116100b8578063e1ad418e1161007c578063e1ad418e14610270578063e5e9a9bb14610290578063e6fd48bc146102a3578063eed75f6d146102ac578063f2c098b7146102cf578063fc0c546a146102e257600080fd5b8063b4455ee814610215578063b460af9414610238578063b6b55f251461024b578063b87592f21461025e578063cb004dab1461026757600080fd5b80633ccfd60b116100ff5780633ccfd60b146101c8578063884a41be146101d05780638caa0083146101d85780638da5cb5b146101e1578063aaf5eb681461020c57600080fd5b806313af40351461013c57806318160ddd14610151578063248519141461016d5780632e60e997146101a05780633259ae35146101c0575b600080fd5b61014f61014a366004610bc7565b6102f5565b005b61015a60025481565b6040519081526020015b60405180910390f35b61019061017b366004610bc7565b600b6020526000908152604090205460ff1681565b6040519015158152602001610164565b61015a6101ae366004610bc7565b60096020526000908152604090205481565b61014f610341565b61014f610488565b61014f610545565b61015a60075481565b6000546101f4906001600160a01b031681565b6040516001600160a01b039091168152602001610164565b61015a60055481565b610190610223366004610bc7565b600a6020526000908152604090205460ff1681565b61014f610246366004610be9565b6106c1565b61014f610259366004610c25565b610710565b61015a60035481565b61015a60045481565b61015a61027e366004610bc7565b60086020526000908152604090205481565b61014f61029e366004610c54565b610761565b61015a60065481565b6101906102ba366004610bc7565b600c6020526000908152604090205460ff1681565b61014f6102dd366004610bc7565b61084d565b6001546101f4906001600160a01b031681565b6000546001600160a01b0316331461030c57600080fd5b6001600160a01b03811661031f57600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526008602052604090205461035a57600080fd5b336000908152600b602052604090205460ff16151560011461037b57600080fd5b336000908152600a602052604090205460ff161561039857600080fd5b6000600654426103a89190610d2f565b90506003548110156103ee5760405162461bcd60e51b81526004016103e5906020808252600490820152631dd85a5d60e21b604082015260600190565b60405180910390fd5b6005543360009081526008602052604081205490919061041090600290610d46565b61041a9190610d46565b33600090815260086020526040902081905560035460065491925061043e91610d68565b3360008181526009602052604090209190915560015461046a916001600160a01b0390911690836108ae565b5050336000908152600a60205260409020805460ff19166001179055565b336000908152600c602052604090205460ff161515600114806104b557506000546001600160a01b031633145b6104be57600080fd5b6001546040516370a0823160e01b81523060048201526105439133916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561050c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105309190610d80565b6001546001600160a01b031691906108ae565b565b3360009081526008602052604090205461055e57600080fd5b336000908152600b602052604090205460ff16151560011461057f57600080fd5b336000908152600a602052604090205460ff1615156001146105a057600080fd5b336000908152600960205260409020546003546006546105c09190610d68565b8110156105cc57600080fd5b60006105d88242610d2f565b90506000600280546105ea9190610d46565b90506000600754600454836105ff9190610d46565b6106099190610d46565b90506000600554848361061c9190610d99565b6106269190610d46565b60015460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610678573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069c9190610db8565b5033600090815260086020908152604080832093909355600990522042905550505050565b336000908152600c602052604090205460ff161515600114806106ee57506000546001600160a01b031633145b6106f757600080fd5b61070b6001600160a01b03831682856108ae565b505050565b336000908152600c602052604090205460ff1615156001148061073d57506000546001600160a01b031633145b61074657600080fd5b60015461075e906001600160a01b0316333084610911565b50565b6000546001600160a01b0316331461077857600080fd5b8051600090815b818310156108475783838151811061079957610799610dda565b6020026020010151905060006001600160a01b0316816001600160a01b0316036107c257600080fd5b6001600160a01b0381166000908152600b60205260409020805460ff1916600117905560055460025483916107f691610d99565b6108009190610d46565b6001600160a01b038216600090815260086020526040812091909155600780546001929061082f908490610d68565b9091555083905061083f81610df0565b93505061077f565b50505050565b6000546001600160a01b0316331461086457600080fd5b6001600160a01b0381166000908152600c602052604090205460ff161561088a57600080fd5b6001600160a01b03166000908152600c60205260409020805460ff19166001179055565b6040516001600160a01b03831660248201526044810182905261070b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610949565b6040516001600160a01b03808516602483015283166044820152606481018290526108479085906323b872dd60e01b906084016108da565b600061099e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a1b9092919063ffffffff16565b80519091501561070b57808060200190518101906109bc9190610db8565b61070b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103e5565b6060610a2a8484600085610a32565b949350505050565b606082471015610a935760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103e5565b600080866001600160a01b03168587604051610aaf9190610e35565b60006040518083038185875af1925050503d8060008114610aec576040519150601f19603f3d011682016040523d82523d6000602084013e610af1565b606091505b5091509150610b0287838387610b0d565b979650505050505050565b60608315610b7c578251600003610b75576001600160a01b0385163b610b755760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103e5565b5081610a2a565b610a2a8383815115610b915781518083602001fd5b8060405162461bcd60e51b81526004016103e59190610e51565b80356001600160a01b0381168114610bc257600080fd5b919050565b600060208284031215610bd957600080fd5b610be282610bab565b9392505050565b600080600060608486031215610bfe57600080fd5b83359250610c0e60208501610bab565b9150610c1c60408501610bab565b90509250925092565b600060208284031215610c3757600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215610c6757600080fd5b823567ffffffffffffffff80821115610c7f57600080fd5b818501915085601f830112610c9357600080fd5b813581811115610ca557610ca5610c3e565b8060051b604051601f19603f83011681018181108582111715610cca57610cca610c3e565b604052918252848201925083810185019188831115610ce857600080fd5b938501935b82851015610d0d57610cfe85610bab565b84529385019392850192610ced565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610d4157610d41610d19565b500390565b600082610d6357634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610d7b57610d7b610d19565b500190565b600060208284031215610d9257600080fd5b5051919050565b6000816000190483118215151615610db357610db3610d19565b500290565b600060208284031215610dca57600080fd5b81518015158114610be257600080fd5b634e487b7160e01b600052603260045260246000fd5b600060018201610e0257610e02610d19565b5060010190565b60005b83811015610e24578181015183820152602001610e0c565b838111156108475750506000910152565b60008251610e47818460208701610e09565b9190910192915050565b6020815260008251806020840152610e70816040850160208701610e09565b601f01601f1916919091016040019291505056fea26469706673582212205ca89b9aa33997b65f245e2c50f3e194c818125ad4ab84755e895c558eedacb064736f6c634300080d0033";

type TeamVestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TeamVestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TeamVesting__factory extends ContractFactory {
  constructor(...args: TeamVestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TeamVesting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TeamVesting__factory {
    return super.connect(runner) as TeamVesting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TeamVestingInterface {
    return new Interface(_abi) as TeamVestingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TeamVesting {
    return new Contract(address, _abi, runner) as unknown as TeamVesting;
  }
}
