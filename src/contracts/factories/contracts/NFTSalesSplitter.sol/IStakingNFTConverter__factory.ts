/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IStakingNFTConverter,
  IStakingNFTConverterInterface,
} from "../../../contracts/NFTSalesSplitter.sol/IStakingNFTConverter";

const _abi = [
  {
    inputs: [],
    name: "claimFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IStakingNFTConverter__factory {
  static readonly abi = _abi;
  static createInterface(): IStakingNFTConverterInterface {
    return new Interface(_abi) as IStakingNFTConverterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IStakingNFTConverter {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IStakingNFTConverter;
  }
}
