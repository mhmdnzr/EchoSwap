/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IVeArtProxy,
  IVeArtProxyInterface,
} from "../../../contracts/interfaces/IVeArtProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_balanceOf",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_locked_end",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "_tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "output",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class IVeArtProxy__factory {
  static readonly abi = _abi;
  static createInterface(): IVeArtProxyInterface {
    return new Interface(_abi) as IVeArtProxyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IVeArtProxy {
    return new Contract(address, _abi, runner) as unknown as IVeArtProxy;
  }
}
