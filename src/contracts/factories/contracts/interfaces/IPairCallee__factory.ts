/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPairCallee,
  IPairCalleeInterface,
} from "../../../contracts/interfaces/IPairCallee";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "hook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IPairCallee__factory {
  static readonly abi = _abi;
  static createInterface(): IPairCalleeInterface {
    return new Interface(_abi) as IPairCalleeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IPairCallee {
    return new Contract(address, _abi, runner) as unknown as IPairCallee;
  }
}
