/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  BribesDistribution,
  BribesDistributionInterface,
} from "../../contracts/BribesDistribution";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    name: "addPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_pairs",
        type: "address[]",
      },
    ],
    name: "addPairs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeLPFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isPair",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pairs",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_allowed",
        type: "address",
      },
    ],
    name: "removeAllowed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    name: "removePair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_allowed",
        type: "address",
      },
    ],
    name: "setAllowed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    name: "setBribeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "setVoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "voter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611551806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063b91ac78811610097578063c4d66de811610066578063c4d66de814610210578063d1d1d1a714610223578063e5e31b1314610236578063f2fde38b1461025957600080fd5b8063b91ac788146101a4578063babcc539146101b7578063c0e79a11146101ea578063c2b7bbb6146101fd57600080fd5b80636470db2f116100d35780636470db2f14610165578063715018a6146101785780638da5cb5b14610180578063af6c9c1d1461019157600080fd5b806336b7adf61461010557806346c96aac1461011a5780634bc2a6571461014a5780635f96684b1461015d575b600080fd5b610118610113366004611212565b61026c565b005b60665461012d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101186101583660046112d7565b6102bb565b6101186102f8565b6101186101733660046112d7565b610a86565b610118610aaf565b6033546001600160a01b031661012d565b61011861019f3660046112d7565b610ac3565b61012d6101b23660046112fb565b610bf8565b6101da6101c53660046112d7565b60686020526000908152604090205460ff1681565b6040519015158152602001610141565b6101186101f83660046112d7565b610c22565b61011861020b3660046112d7565b610c4e565b61011861021e3660046112d7565b610c62565b610118610231366004611314565b610d94565b6101da6102443660046112d7565b60676020526000908152604090205460ff1681565b6101186102673660046112d7565b610f4c565b610274610fc2565b80516000905b808210156102b6576102a48383815181106102975761029761134d565b602002602001015161101c565b816102ae81611379565b92505061027a565b505050565b6102c3610fc2565b6001600160a01b0381166102d657600080fd5b606680546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633148061032057503360009081526068602052604090205460ff165b61032957600080fd5b60655460009081808080808080805b888a1015610a7a5760658a815481106103535761035361134d565b60009182526020909120015460665460405163b9a09fd560e01b81526001600160a01b0392831660048201819052995091169063b9a09fd590602401602060405180830381865afa1580156103ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d09190611392565b9550856001600160a01b031663770f85716040518163ffffffff1660e01b8152600401602060405180830381865afa158015610410573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104349190611392565b606654604051637572079360e11b81526001600160a01b03898116600483015292975091169063eae40f2690602401602060405180830381865afa158015610480573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a49190611392565b9350856001600160a01b03166382bfefc86040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105089190611392565b9050806001600160a01b0316639d63848a6040518163ffffffff1660e01b81526004016040805180830381865afa158015610547573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056b91906113af565b90935091506001600160a01b0386161580159061059057506001600160a01b03851615155b80156105a457506001600160a01b03841615155b15610a6857856001600160a01b031663d294f0936040518163ffffffff1660e01b815260040160408051808303816000875af1925050508015610604575060408051601f3d908101601f19168201909252610601918101906113de565b60015b1561060c5750505b6001600160a01b0383161561083a576040516370a0823160e01b81526001600160a01b0386811660048301528416906370a0823190602401602060405180830381865afa158015610661573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106859190611402565b9750871561083a57604051638980f11f60e01b81526001600160a01b038481166004830152602482018a9052861690638980f11f90604401600060405180830381600087803b1580156106d757600080fd5b505af11580156106eb573d6000803e3d6000fd5b505060405163095ea7b360e01b81526001600160a01b038781166004830152600060248301528616925063095ea7b391506044016020604051808303816000875af115801561073e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610762919061141b565b5060405163095ea7b360e01b81526001600160a01b038581166004830152602482018a905284169063095ea7b3906044016020604051808303816000875af11580156107b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d6919061141b565b5060405163b66503cf60e01b81526001600160a01b038481166004830152602482018a905285169063b66503cf90604401600060405180830381600087803b15801561082157600080fd5b505af1158015610835573d6000803e3d6000fd5b505050505b6001600160a01b03821615610a68576040516370a0823160e01b81526001600160a01b0386811660048301528316906370a0823190602401602060405180830381865afa15801561088f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b39190611402565b97508715610a6857604051638980f11f60e01b81526001600160a01b038381166004830152602482018a9052861690638980f11f90604401600060405180830381600087803b15801561090557600080fd5b505af1158015610919573d6000803e3d6000fd5b505060405163095ea7b360e01b81526001600160a01b038781166004830152600060248301528516925063095ea7b391506044016020604051808303816000875af115801561096c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610990919061141b565b5060405163095ea7b360e01b81526001600160a01b038581166004830152602482018a905283169063095ea7b3906044016020604051808303816000875af11580156109e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a04919061141b565b5060405163b66503cf60e01b81526001600160a01b038381166004830152602482018a905285169063b66503cf90604401600060405180830381600087803b158015610a4f57600080fd5b505af1158015610a63573d6000803e3d6000fd5b505050505b89610a7281611379565b9a5050610338565b50505050505050505050565b610a8e610fc2565b6001600160a01b03166000908152606860205260409020805460ff19169055565b610ab7610fc2565b610ac160006110bc565b565b610acb610fc2565b6065546000905b808210156102b657826001600160a01b031660658381548110610af757610af761134d565b6000918252602090912001546001600160a01b031603610be65760006065610b2060018461143d565b81548110610b3057610b3061134d565b600091825260209091200154606580546001600160a01b039092169250829185908110610b5f57610b5f61134d565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506065805480610b9e57610b9e611454565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03861682526067905260409020805460ff1916905550505050565b81610bf081611379565b925050610ad2565b60658181548110610c0857600080fd5b6000918252602090912001546001600160a01b0316905081565b610c2a610fc2565b6001600160a01b03166000908152606860205260409020805460ff19166001179055565b610c56610fc2565b610c5f8161101c565b50565b600054610100900460ff1615808015610c825750600054600160ff909116105b80610c9c5750303b158015610c9c575060005460ff166001145b610d045760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610d27576000805461ff0019166101001790555b610d2f61110e565b606680546001600160a01b0319166001600160a01b0384161790558015610d90576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b610d9c610fc2565b60665460405163b9a09fd560e01b81526001600160a01b038381166004830152600092169063b9a09fd590602401602060405180830381865afa158015610de7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0b9190611392565b90506000816001600160a01b031663770f85716040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e719190611392565b9050610e9b6040518060400160405280600681526020016503830b4b91d160d51b8152508461113d565b610ec4604051806040016040528060078152602001662fb3b0bab3b29d60c91b8152508361113d565b610eeb6040518060400160405280600581526020016437b632311d60d91b8152508261113d565b6040516313af403560e01b81526001600160a01b0385811660048301528216906313af403590602401600060405180830381600087803b158015610f2e57600080fd5b505af1158015610f42573d6000803e3d6000fd5b5050505050505050565b610f54610fc2565b6001600160a01b038116610fb95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610cfb565b610c5f816110bc565b6033546001600160a01b03163314610ac15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610cfb565b6001600160a01b03811660009081526067602052604090205460ff161561104257600080fd5b6001600160a01b03811661105557600080fd5b6065805460018181019092557f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c70180546001600160a01b039093166001600160a01b031990931683179055600091825260676020526040909120805460ff19169091179055565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166111355760405162461bcd60e51b8152600401610cfb9061146a565b610ac1611182565b610d9082826040516024016111539291906114b5565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526111b2565b600054610100900460ff166111a95760405162461bcd60e51b8152600401610cfb9061146a565b610ac1336110bc565b610c5f8160006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610c5f57600080fd5b803561120d816111ed565b919050565b6000602080838503121561122557600080fd5b823567ffffffffffffffff8082111561123d57600080fd5b818501915085601f83011261125157600080fd5b813581811115611263576112636111d7565b8060051b604051601f19603f83011681018181108582111715611288576112886111d7565b6040529182528482019250838101850191888311156112a657600080fd5b938501935b828510156112cb576112bc85611202565b845293850193928501926112ab565b98975050505050505050565b6000602082840312156112e957600080fd5b81356112f4816111ed565b9392505050565b60006020828403121561130d57600080fd5b5035919050565b6000806040838503121561132757600080fd5b8235611332816111ed565b91506020830135611342816111ed565b809150509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161138b5761138b611363565b5060010190565b6000602082840312156113a457600080fd5b81516112f4816111ed565b600080604083850312156113c257600080fd5b82516113cd816111ed565b6020840151909250611342816111ed565b600080604083850312156113f157600080fd5b505080516020909101519092909150565b60006020828403121561141457600080fd5b5051919050565b60006020828403121561142d57600080fd5b815180151581146112f457600080fd5b60008282101561144f5761144f611363565b500390565b634e487b7160e01b600052603160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b604081526000835180604084015260005b818110156114e357602081870181015160608684010152016114c6565b818111156114f5576000606083860101525b506001600160a01b0393909316602083015250601f91909101601f19160160600191905056fea26469706673582212206ad7c79de65841474ca2de5ab773ad5275f9ae7269ba60ec897d228346d2c96664736f6c634300080d0033";

type BribesDistributionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BribesDistributionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BribesDistribution__factory extends ContractFactory {
  constructor(...args: BribesDistributionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BribesDistribution & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BribesDistribution__factory {
    return super.connect(runner) as BribesDistribution__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BribesDistributionInterface {
    return new Interface(_abi) as BribesDistributionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BribesDistribution {
    return new Contract(address, _abi, runner) as unknown as BribesDistribution;
  }
}
