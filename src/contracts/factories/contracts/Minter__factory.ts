/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Minter, MinterInterface } from "../../contracts/Minter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "__voter",
        type: "address",
      },
      {
        internalType: "address",
        name: "__ve",
        type: "address",
      },
      {
        internalType: "address",
        name: "__rewards_distributor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weekly",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "circulating_supply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "circulating_emission",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_TEAM_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_echo",
    outputs: [
      {
        internalType: "contract IEcho",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_rewards_distributor",
    outputs: [
      {
        internalType: "contract IRewardsDistributor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_ve",
    outputs: [
      {
        internalType: "contract IVotingEscrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_voter",
    outputs: [
      {
        internalType: "contract IVoter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptTeam",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "active_period",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calculate_emission",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_weeklyMint",
        type: "uint256",
      },
    ],
    name: "calculate_rebase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "check",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "circulating_emission",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "circulating_supply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "claimants",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isFirstMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingTeam",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "period",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_emission",
        type: "uint256",
      },
    ],
    name: "setEmission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rebase",
        type: "uint256",
      },
    ],
    name: "setRebase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_team",
        type: "address",
      },
    ],
    name: "setTeam",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_teamRate",
        type: "uint256",
      },
    ],
    name: "setTeamRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "__voter",
        type: "address",
      },
    ],
    name: "setVoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "team",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "teamRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "update_period",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weekly",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weekly_emission",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040526103de60015561012c6002556a084595161401484a0000006004553480156200002c57600080fd5b506040516200174c3803806200174c8339810160408190526200004f916200017b565b60068054336001600160a01b03199182168117909255600780549091169091179055603260035560408051637e062a3560e11b815290516001600160a01b0384169163fc0c546a9160048281019260209291908290030181865afa158015620000bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000e29190620001c5565b6001600160a01b03908116608052600980546001600160a01b03191685831617905582811660a052811660c05262093a80806200012181600262000200565b6200012d904262000222565b6200013991906200023d565b62000145919062000200565b60055550506000805460ff191660011790555062000260565b80516001600160a01b03811681146200017657600080fd5b919050565b6000806000606084860312156200019157600080fd5b6200019c846200015e565b9250620001ac602085016200015e565b9150620001bc604085016200015e565b90509250925092565b600060208284031215620001d857600080fd5b620001e3826200015e565b9392505050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156200021d576200021d620001ea565b500290565b60008219821115620002385762000238620001ea565b500190565b6000826200025b57634e487b7160e01b600052601260045260246000fd5b500490565b60805160a05160c05161144c620003006000396000818161021f01528181610dd701528181610e7e0152610ef101526000818161029b0152818161057a01528181610626015281816107820152610a10015260008181610302015281816104ed015281816105aa0152818161080801528181610a9201528181610bff01528181610c7e01528181610d4801528181610e060152610f89015261144c6000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80638dd598fb116100de578063cfc6c8ff11610097578063de3e349211610071578063de3e349214610348578063e038c75a1461035b578063ed29fc1114610363578063ef78d4fd1461036b57600080fd5b8063cfc6c8ff14610324578063d13996081461032c578063ddce102f1461033557600080fd5b80638dd598fb14610296578063919840ad146102bd578063a129cfbf146102d5578063a9abf7ec146102e8578063b5cc143a146102f5578063cb8b10e5146102fd57600080fd5b80633db9b42a1161014b57806359d46ffc1161012557806359d46ffc1461025457806378ef7f0214610267578063851708131461027057806385f2aef21461028357600080fd5b80633db9b42a146101ef5780634b1cd5da1461021a5780634bc2a6571461024157600080fd5b806301c8e6fd14610193578063095cf5c6146101ae5780631eebae80146101c357806326cfc17b146101cb5780632e8f7b1f146101d457806336d96faf146101e7575b600080fd5b61019b603281565b6040519081526020015b60405180910390f35b6101c16101bc36600461110a565b610373565b005b61019b6103c8565b61019b60045481565b6101c16101e2366004611125565b6103f0565b61019b610440565b600954610202906001600160a01b031681565b6040516001600160a01b0390911681526020016101a5565b6102027f000000000000000000000000000000000000000000000000000000000000000081565b6101c161024f36600461110a565b610455565b600854610202906001600160a01b031681565b61019b60035481565b6101c161027e366004611214565b6104b4565b600754610202906001600160a01b031681565b6102027f000000000000000000000000000000000000000000000000000000000000000081565b6102c561074c565b60405190151581526020016101a5565b61019b6102e3366004611125565b61077d565b6000546102c59060ff1681565b6101c16108df565b6102027f000000000000000000000000000000000000000000000000000000000000000081565b61019b610950565b61019b60055481565b6101c1610343366004611125565b61096a565b6101c1610356366004611125565b6109bb565b61019b610a0c565b61019b610b1c565b61019b6110c0565b6007546001600160a01b031633146103a65760405162461bcd60e51b815260040161039d906112dd565b60405180910390fd5b600880546001600160a01b0319166001600160a01b0392909216919091179055565b60006103e860026103d7610a0c565b6103e19190611315565b6103eb9190611334565b905090565b6007546001600160a01b0316331461041a5760405162461bcd60e51b815260040161039d906112dd565b603281111561043b5760405162461bcd60e51b815260040161039d90611356565b600355565b60006103e86001546004546103e19190611315565b6001600160a01b03811661046857600080fd5b6007546001600160a01b031633146104925760405162461bcd60e51b815260040161039d906112dd565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b031633146104cb57600080fd5b801561071c576040516340c10f1960e01b8152306004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f19906044016020604051808303816000875af115801561053e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610562919061137d565b5060405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260001960248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af11580156105f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610617919061137d565b5060005b835181101561071a577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d4e54c3b8483815181106106655761066561139f565b60200260200101516303bfc4008785815181106106845761068461139f565b60200260200101516040518463ffffffff1660e01b81526004016106c49392919092835260208301919091526001600160a01b0316604082015260600190565b6020604051808303816000875af11580156106e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070791906113b5565b5080610712816113ce565b91505061061b565b505b600680546001600160a01b031916905562093a8061073a8142611334565b6107449190611315565b600555505050565b60055460009061075f62093a80826113e7565b421015801561077757506006546001600160a01b0316155b91505090565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663047fc9aa6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080291906113b5565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610864573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088891906113b5565b90506000816108996103e885611315565b6108a39190611334565b905060025481106108d2576103e8600254866108bf9190611315565b6108c99190611334565b95945050505050565b6103e86108bf8287611315565b6008546001600160a01b0316331461092c5760405162461bcd60e51b815260206004820152601060248201526f6e6f742070656e64696e67207465616d60801b604482015260640161039d565b600854600780546001600160a01b0319166001600160a01b03909216919091179055565b60006103eb61095d610440565b6109656103c8565b6110da565b6007546001600160a01b031633146109945760405162461bcd60e51b815260040161039d906112dd565b6103e88111156109b65760405162461bcd60e51b815260040161039d90611356565b600155565b6007546001600160a01b031633146109e55760405162461bcd60e51b815260040161039d906112dd565b6103e8811115610a075760405162461bcd60e51b815260040161039d90611356565b600255565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663047fc9aa6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9091906113b5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1291906113b5565b6103eb91906113ff565b600554600090610b2f62093a80826113e7565b4210158015610b4757506006546001600160a01b0316155b156110bb5762093a80610b5a8142611334565b610b649190611315565b600581905560005490915060ff16610b8657610b7e610950565b600455610b91565b6000805460ff191690555b6000610b9e60045461077d565b905060006103e8600354600454610bb59190611315565b610bbf9190611334565b600454909150600082610bd285846113ff565b610bdc91906113ff565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610c46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6a91906113b5565b905082811015610d1f576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166340c10f1930610cae84876113ff565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610cf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1d919061137d565b505b60075460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018690527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610d93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db7919061137d565b610dc057600080fd5b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018790527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610e4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e73919061137d565b610e7c57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663811a40fe6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ed757600080fd5b505af1158015610eeb573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b21ed5026040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f4a57600080fd5b505af1158015610f5e573d6000803e3d6000fd5b505060095460405163095ea7b360e01b81526001600160a01b039182166004820152602481018690527f0000000000000000000000000000000000000000000000000000000000000000909116925063095ea7b391506044016020604051808303816000875af1158015610fd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffa919061137d565b50600954604051633c6b16ab60e01b8152600481018490526001600160a01b0390911690633c6b16ab90602401600060405180830381600087803b15801561104157600080fd5b505af1158015611055573d6000803e3d6000fd5b50505050336001600160a01b03167fb4c03061fb5b7fed76389d5af8f2e0ddb09f8c70d1333abbb62582835e10accb60045461108f610a0c565b6110976103c8565b6040805193845260208401929092529082015260600160405180910390a250505050505b919050565b600062093a806110d08142611334565b6103eb9190611315565b6000818310156110ea57816110ec565b825b9392505050565b80356001600160a01b03811681146110bb57600080fd5b60006020828403121561111c57600080fd5b6110ec826110f3565b60006020828403121561113757600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561117d5761117d61113e565b604052919050565b600067ffffffffffffffff82111561119f5761119f61113e565b5060051b60200190565b600082601f8301126111ba57600080fd5b813560206111cf6111ca83611185565b611154565b82815260059290921b840181019181810190868411156111ee57600080fd5b8286015b8481101561120957803583529183019183016111f2565b509695505050505050565b60008060006060848603121561122957600080fd5b833567ffffffffffffffff8082111561124157600080fd5b818601915086601f83011261125557600080fd5b813560206112656111ca83611185565b82815260059290921b8401810191818101908a84111561128457600080fd5b948201945b838610156112a95761129a866110f3565b82529482019490820190611289565b975050870135925050808211156112bf57600080fd5b506112cc868287016111a9565b925050604084013590509250925092565b6020808252600890820152676e6f74207465616d60c01b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561132f5761132f6112ff565b500290565b60008261135157634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600d908201526c0e4c2e8ca40e8dede40d0d2ced609b1b604082015260600190565b60006020828403121561138f57600080fd5b815180151581146110ec57600080fd5b634e487b7160e01b600052603260045260246000fd5b6000602082840312156113c757600080fd5b5051919050565b6000600182016113e0576113e06112ff565b5060010190565b600082198211156113fa576113fa6112ff565b500190565b600082821015611411576114116112ff565b50039056fea2646970667358221220d282a6c674c71bb838f4fac036b131570f537c5b3bb1018299308253a3ffb7cb64736f6c634300080d0033";

type MinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Minter__factory extends ContractFactory {
  constructor(...args: MinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    __voter: AddressLike,
    __ve: AddressLike,
    __rewards_distributor: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      __voter,
      __ve,
      __rewards_distributor,
      overrides || {}
    );
  }
  override deploy(
    __voter: AddressLike,
    __ve: AddressLike,
    __rewards_distributor: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      __voter,
      __ve,
      __rewards_distributor,
      overrides || {}
    ) as Promise<
      Minter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Minter__factory {
    return super.connect(runner) as Minter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinterInterface {
    return new Interface(_abi) as MinterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Minter {
    return new Contract(address, _abi, runner) as unknown as Minter;
  }
}
